(defun even?(n)
  (= (mod n 2) 0))
(defun square(x)
  (* x x))
(defun fast-expt(b n)
  (defun fast-expt-iter(b n a)
    (cond ((= n 0) a)
	  ((even? n) (fast-expt-iter (square b) (/ n 2) a))
	  (t (fast-expt-iter b (- n 1) (* b a)))))
  (fast-expt-iter b n 1))